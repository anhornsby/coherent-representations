# build and deploy container to dockerhub

services:
  - docker

stages:
  - build
  - name: deploy
    if: branch = master

sudo: required
dist: xenial

# addons:
#   apt:
#     packages:
#       - libssl1.0.0

jobs:
  include:
    - stage: build
      install:
        - pip install --user -U pip
        - pip install --user osfclient
      script: 
        # pull the data from public osf repo
        # note that secure environment variables are set within travis
        - osf list
        - osf fetch data/politics/politics_data.csv data/politics/politics_data.csv
        - osf fetch data/robots/robots-first/robots_results.csv data/robots/robots-first/robots_results.csv
        - osf fetch data/robots/robots-rerun/robots_rerun_results.csv data/robots/robots-rerun/robots_rerun_results.csv
        # - osf clone
        - mv 5bvmp/osfstorage/data/ ./
        - rmdir 5bvmp # tidy up folderjunk
        # now lets build the container
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - make build
        # now test that it works by running the simulation
        - docker run -v ${PWD}:/usr/local/data/ -it adamnhornsby/coherent-representations simulation /usr/local/data/
    - stage: deploy
      install:
        - pip install --user -U pip
        - pip install --user osfclient
      script: 
        # pull the data from public osf repo
        - pip install osfclient
        - osf clone
        - mv 5bvmp/osfstorage/data/ ./
        - rmdir 5bvmp # tidy up folderjunk
        #Â build and deploy the container image to dockerhub
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - make build
        - make deploy